#!/usr/bin/env python
from tinydb import TinyDB,where
import os,stat
import argparse

db = TinyDB(os.path.expanduser('~') + '/ssh-server/.servers.db')

def render(instances):
    print 'index\tname\t\taddress\t\tport\tusername'
    if instances:
        order = 1
        for i in instances:
            print str(order) + '\t' + i['host'] + '\t\t' + i['addr'] + '\t' + i['port'] + '\t' + i['user']
            order += 1

# add a new instance
def add(args):
    s = args[1][1].split(':') 
    username_and_key = s[0].split('^')
    password_and_address = s[1].split('@')

    username = username_and_key[0]
    address = password_and_address[1]
    if len(username_and_key) >= 2:
	key = username_and_key[1]
        key_pass = password_and_address[0]
	password = ''
    else:
        key = ''
	key_pass = ''
	password = password_and_address[0]
    
    data = {
	'host': args[1][0],
	'addr': address,
	'port': args[1][2],
	'user': username,
	'pass': password,
	'key': key,
	'keypass': key_pass
    }

    db.insert(data)
    private_key = ''
    if data['key']:
        private_key = ' -i ' + data['key']
   
    filename = os.path.expanduser('~') + '/ssh-server/' + data['host']
    with open(filename, 'w') as server:
        server.writelines([
            '#!/usr/bin/env python\n',
            '#-*- coding: utf-8 -*-\n',
            'ssh' + private_key + ' ' + data['user'] + '@' + data['addr'] + ' -p ' + data['port']
        ])
    os.chmod(filename, stat.S_IRWXU) 
    print "host %s added" % data['host']

# remove an instance
def remove(name):
    db.remove(where('host') == name)
    filename = os.path.expanduser('~') + '/ssh-server/' + name
    if os.path.exists(filename):
        os.remove(filename)

# get instances
def get_list():
    instances = db.all()
    render(instances)

# edit an instance
def edit(data):
    empty_keys = []
    for item in data:
        if not data[item]:
            empty_keys.append(item)
    
    for i in empty_keys:
        data.pop(i)
    db.update(data, where('host') == data['name'])

# get an instance
def get_one(name):
    instance = db.search(where('host') == name)
    render(instance)

# get an instance's password
def get_pass(name):
    instances = db.search(where('host') == name)
    print 'host\t\tpassword\t\tkey-password'
    if instances:
        for i in instances:
            print i['host'] + '\t\t' + i['pass'] + '\t\t' + i['keypass']

arg_parser= argparse.ArgumentParser(description='Change the option prefix charaters', prefix_chars=' ', add_help=True)

arg_parser.add_argument(
    "arg",
    action="store"
)

args = arg_parser.parse_known_args()
#print args[0].arg
#print args[1][0]
#print args

if args[0].arg == 'add':
    add(args)

if args[0].arg == 'list':
    get_list()

if args[0].arg == 'get':
    get_one(args[1][0])

if args[0].arg == 'pass':
    get_pass(args[1][0])

if args[0].arg == 'remove':
    remove(args[1][0])

if args[0].arg == 'edit':
    remove(args[1][0])
    add(args)

