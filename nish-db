#!/usr/bin/env python
# -*- coding: utf-8 -*-
from tinydb import TinyDB, where
import os
import stat
import argparse
from getpass import getpass
from prettytable import PrettyTable


# 获取数据库
db = TinyDB(os.path.expanduser('~')+'/.ssh-servers.db')
db_inst = db.table('instances')
db_cata = db.table('catalog')


# 检测，保证每一个实例只能添加到一个组
def check_inst_in_one_cata(arg):
    pass


# 添加分组
def add_cata(name):
    data = {
        'name': name,
        'instances': []
    }
    db_cata.insert(data)


# 删除分组
def del_cata(name):
    db_cata.remove(where('name') == name)


# 将制定实例(或列表)迁移至制定分组
def migr_to_cata(name, *args):
    cata = db_cata.get(where('name') == name)
    cata['instances'] = args
    db_cata.update(cata, where('name') == name)


# 检测服务器是否存在
def has_server(arg):
    servers = []
    files = os.listdir(os.path.expanduser('~') + '/ssh-server/')
    for i in files:
        servers.append(i.split('#')[0])
        servers.append(i.split('#')[1])

    return arg in servers


# 由index或name获取完整文件名
def get_filename(arg):
    if not has_server(arg):
        print u"实例不存在"
        import sys
        sys.exit()
    files = os.listdir(os.path.expanduser('~') + '/ssh-server')
    for i in files:
        if i.startswith(arg):
            return i
        elif i.endswith(arg):
            return i
        else:
            continue


# 由未知的index或name获取index和name字典
def get_index_and_name(arg):
    if not has_server(arg):
        print u"实例不存在"
        import sys
        sys.exit()
    _fn = get_filename(arg)
    index = _fn.split('#')[0]
    name = _fn.split('#')[1]
    return {'index': index, 'name': name}


# 搜索功能
def search(arg):
    pass


# 实例列表处理成表格
def render(catalogs):
    table = PrettyTable([
        'catalog',
        'index',
        'name',
        'address',
        'port',
        'username'
    ])
    table.junction_char = '·'

    for c in catalogs:
        for n, i in enumerate(c['instances']):
            if n == 0:
                cata_name = c['name']
            else:
                cata_name = ''
            inst = db_inst.get(where('index') == i)
            table.add_row([
                cata_name,
                inst['index'],
                inst['host'],
                inst['addr'],
                inst['port'],
                inst['user']
            ])

    table.sortby = 'index'
    table.reversesort = False
    print table.get_string()


# 添加一个实例
def add(args):
    host = args[1][0]
    if has_server(host):
        print u"名称已存在，请重新指定"
        import sys
        sys.exit()
    userkey_addrport = args[1][1].split('@')
    addr_port = userkey_addrport[1].split(':')
    user_key = userkey_addrport[0].split('^')
    username = user_key[0]
    print has_server(username)
    address = addr_port[0]
    if len(user_key) == 2:
        key = user_key[1]
        key_pass = getpass('输入私钥密码（默认为空）: ')
        password = ''
    else:
        key = ''
        key_pass = ''
        while True:
            password = getpass('输入密码: ')
            repeat = getpass('重复输入: ')
            if not password == repeat:
                print '密码不匹配,请重新输入.'
            else:
                break

    data = {
        'host': args[1][0],
        'addr': address,
        'port': port,
        'user': username,
        'pass': password,
        'key': key,
        'keypass': key_pass,
        'catalog': 'default'
    }

    db_inst.insert(data)
    this_instance = db_inst.search(where('host') == data['host'])[0]
    this_instance['index'] = this_instance.eid
    db_inst.update(this_instance, where('host') == data['host'])
    private_key = ''
    if data['key']:
        private_key = ' -i ' + data['key']

    filename = os.path.expanduser('~') + '/ssh-server/' +\
        str(this_instance['index']) + '#' + data['host']
    with open(filename, 'w') as server:
        server.writelines([
            '#!/bin/zsh\n',
            'ssh' + private_key + ' ' +
            data['user'] + '@' + data['addr'] + ' -p ' + data['port']
        ])
    os.chmod(filename, stat.S_IRWXU)
    print "实例已添加： %s" % data['host']


# 删除一个实例
def remove(arg):
    host = get_index_and_name(arg)['name']
    if not has_server(host):
        print u"实例不存在，请重新指定"
        import sys
        sys.exit()
    db_inst.remove(where('host') == host)
    filename = os.path.expanduser('~') + '/ssh-server/' + get_filename(arg)
    if os.path.exists(filename):
        os.remove(filename)
    print "实例已删除：%s" % arg


# 获取实例列表
def get_list():
    catas = db_cata.all()
    render(catas)


# 获取一个实例详情
def get_one(arg):
    host = get_index_and_name(arg)['name']
    if not has_server(host):
        print u"实例不存在，请重新指定"
        import sys
        sys.exit()
    instance = db_inst.search(where('host') == host)
    render(instance)


# 获取一个实例的密码和私钥密码
def get_pass(arg):
    host = get_index_and_name(arg)['name']
    if not has_server(host):
        print u"实例不存在，请重新指定"
        import sys
        sys.exit()
    instances = db_inst.search(where('host') == host)
    table = PrettyTable(['host', 'password', 'key', 'key-password'])
    if instances:
        for i in instances:
            table.add_row([i['host'], i['pass'], i['key'], i['keypass']])
    print table.get_string()


# 拷贝一个实例
def copy(args):
    index = get_index_and_name(args[1][0])['index']
    if not has_server(index):
        print u"实例不存在，请重新指定"
        import sys
        sys.exit()
    new_name = args[1][1]
    if has_server(new_name):
        print u"名称已存在，请重新指定"
        import sys
        sys.exit()

    instance = db_inst.search(where('index') == int(index))[0]
    # 新实例
    data = {
        "addr": instance['addr'],
        "host": new_name,
        "key": instance['key'],
        "keypass": instance['keypass'],
        "pass": instance['pass'],
        "port": instance['port'],
        "user": instance['user'],
    }
    db_inst.insert(data)
    this_instance = db_inst.search(where('host') == data['host'])[0]
    this_instance['index'] = this_instance.eid
    db_inst.update(this_instance, where('host') == data['host'])
    private_key = ''
    if data['key']:
        private_key = ' -i ' + data['key']

    filename = os.path.expanduser('~') + '/ssh-server/' +\
        str(this_instance['index']) + '#' + data['host']
    with open(filename, 'w') as server:
        server.writelines([
            '#!/bin/zsh\n',
            'ssh' + private_key + ' ' +
            data['user'] + '@' + data['addr'] + ' -p ' + data['port']
        ])
    os.chmod(filename, stat.S_IRWXU)
    print "实例拷贝成功，新实例：%s" % data['host']


arg_parser = argparse.ArgumentParser(
    description='Change the option prefix charaters',
    prefix_chars=' ',
    add_help=True
)

arg_parser.add_argument(
    "arg",
    action="store"
)

args = arg_parser.parse_known_args()

if args[0].arg == 'add':
    add(args)

if args[0].arg == 'list':
    get_list()

if args[0].arg == 'get':
    get_one(args[1][0])

if args[0].arg == 'pass':
    get_pass(args[1][0])

if args[0].arg == 'rm':
    remove(args[1][0])

if args[0].arg == 'edit':
    remove(args[1][0])
    args[1].pop(0)
    add(args)

if args[0].arg == 'cp':
    copy(args)

if args[0].arg == '--get-file':
    print get_filename(args[1][0])

if args[0].arg == 'cata':
    if args[1][0] == 'add':
        add_cata(args[1][1])
    if args[1][0] == 'rm':
        del_cata(args[1][1])
    if args[1][0] == 'mv':
        migr_to_cata(args[1][1], args[1][2:])